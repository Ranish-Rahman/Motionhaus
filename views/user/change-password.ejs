<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>The Tastemaker - Change Password</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    :root {
      --primary-purple: #090909f5;
      --sidebar-width: 250px;
    }

    body {
      margin: 0;
      font-family: 'Inter', sans-serif;
      background-color: #f8f9fa;
    }

    .layout {
      display: flex;
      min-height: 100vh;
    }

    .sidebar {
      width: var(--sidebar-width);
      background: var(--primary-purple);
      padding: 2rem 1.5rem;
      color: white;
      position: fixed;
      height: 100vh;
      left: 0;
      top: 0;
      z-index: 10;
      border-right: 1px solid #232326;
    }

    .sidebar-logo {
      font-size: 1.5rem;
      font-weight: bold;
      margin-bottom: 3rem;
      color: white;
      text-decoration: none;
      display: block;
    }

    .nav-link {
      color: rgba(255, 255, 255, 0.8);
      padding: 0.75rem 1rem;
      display: flex;
      align-items: center;
      gap: 1rem;
      text-decoration: none;
      transition: all 0.3s ease;
      border-radius: 8px;
    }

    .nav-link:hover,
    .nav-link.active {
      color: white;
      background: rgba(255, 255, 255, 0.1);
    }

    .nav-link i {
      font-size: 1.2rem;
    }

    .main-content {
      margin-left: var(--sidebar-width);
      flex-grow: 1;
      padding: 2rem;
      background-color: #131314;
    }

    .content-wrapper {
      background-image: url("/image/grain-gradient-shapes-collection-2.jpg");
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      border-radius: 20px;
      padding: 3rem;
      height: calc(100vh - 4rem);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      overflow-y: auto;
    }

    .content-header {
      color: white;
      margin-bottom: 4rem;
      text-align: center;
    }

    .content-header h1 {
      font-size: 3.5rem;
      font-weight: 600;
      margin-bottom: 1rem;
    }

    .content-header p {
      font-size: 1.2rem;
      opacity: 0.9;
    }

    .content-body {
      margin-top: 2rem;
    }

    .profile-section {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 2rem;
      color: white;
      margin-bottom: 2rem;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .form-control {
      background-color: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: white;
    }

    .form-control:focus {
      background-color: rgba(255, 255, 255, 0.15);
      border-color: rgba(255, 255, 255, 0.3);
      color: white;
      box-shadow: 0 0 0 0.25rem rgba(255, 255, 255, 0.1);
    }

    .form-control::placeholder {
      color: rgba(255, 255, 255, 0.5);
    }

    .btn-primary {
      background-color: #ff7675;
      border-color: #ff7675;
    }

    .btn-primary:hover {
      background-color: #e66767;
      border-color: #e66767;
    }

    .alert {
      background-color: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: white;
    }

    .alert-success {
      border-left: 4px solid #00b894;
    }

    .alert-danger {
      border-left: 4px solid #ff7675;
    }

    .password-requirements {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 10px;
      padding: 1rem;
      margin-top: 1rem;
    }

    .password-requirements ul {
      margin: 0;
      padding-left: 1.5rem;
      color: rgba(255, 255, 255, 0.8);
    }

    .password-requirements li {
      margin-bottom: 0.5rem;
    }

    .password-requirements li.valid {
      color: #00b894;
    }

    .password-requirements li.invalid {
      color: #ff7675;
    }
  </style>
</head>
<body>
  <div class="layout">
    <!-- Include the common sidebar -->
    <%- include('../partials/user-profile-sidebar', { currentPage: 'change-password' }) %>

    <!-- Main Content -->
    <main class="main-content">
      <div class="content-wrapper">
        <div class="content-header">
          <h1>Change Password</h1>
          <p>Update your account password</p>
        </div>

        <div class="content-body">
          <% if (success && success.length > 0) { %>
            <div class="alert alert-success mb-4" role="alert">
              <%= success %>
            </div>
          <% } %>
          
          <% if (error && error.length > 0) { %>
            <div class="alert alert-danger mb-4" role="alert">
              <%= error %>
            </div>
          <% } %>

          <div class="profile-section">
            <form action="/profile/change-password" method="POST" class="row g-4" id="changePasswordForm">
              <div class="col-12">
                <label for="currentPassword" class="form-label">Current Password</label>
                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                <div class="invalid-feedback">Please enter your current password</div>
              </div>
              
              <div class="col-12">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                <div class="invalid-feedback">Please enter a valid new password</div>
              </div>
              
              <div class="col-12">
                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                <div class="invalid-feedback">Passwords do not match</div>
              </div>

              <div class="col-12">
                <div class="password-requirements">
                  <h6 class="mb-3">Password Requirements:</h6>
                  <ul>
                    <li id="length">At least 8 characters long</li>
                    <li id="uppercase">Contains at least one uppercase letter</li>
                    <li id="lowercase">Contains at least one lowercase letter</li>
                    <li id="number">Contains at least one number</li>
                    <li id="special">Contains at least one special character</li>
                  </ul>
                </div>
              </div>

              <div class="col-12">
                <button type="submit" class="btn btn-primary">Change Password</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </main>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('changePasswordForm');
      const newPassword = document.getElementById('newPassword');
      const confirmPassword = document.getElementById('confirmPassword');
      const requirements = {
        length: document.getElementById('length'),
        uppercase: document.getElementById('uppercase'),
        lowercase: document.getElementById('lowercase'),
        number: document.getElementById('number'),
        special: document.getElementById('special')
      };

      // Password validation rules
      const rules = {
        length: /.{8,}/,
        uppercase: /[A-Z]/,
        lowercase: /[a-z]/,
        number: /[0-9]/,
        special: /[!@#$%^&*(),.?":{}|<>]/
      };

      // Check password requirements
      function checkPassword(password) {
        for (const [key, rule] of Object.entries(rules)) {
          const element = requirements[key];
          if (rule.test(password)) {
            element.classList.add('valid');
            element.classList.remove('invalid');
          } else {
            element.classList.add('invalid');
            element.classList.remove('valid');
          }
        }
      }

      // Check if passwords match
      function checkPasswordsMatch() {
        if (confirmPassword.value && newPassword.value !== confirmPassword.value) {
          confirmPassword.setCustomValidity("Passwords do not match");
        } else {
          confirmPassword.setCustomValidity("");
        }
      }

      // Add event listeners
      newPassword.addEventListener('input', function() {
        checkPassword(this.value);
        checkPasswordsMatch();
      });

      confirmPassword.addEventListener('input', checkPasswordsMatch);

      // Form submission
      form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      });
    });
  </script>
</body>
</html> 