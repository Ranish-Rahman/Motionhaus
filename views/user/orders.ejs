<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <style>
        body { 
            background: #f8f9fa;
            padding-top: 80px;
        }
        .status-badge {
            padding: 0.25em 0.75em;
            border-radius: 1em;
            font-size: 0.95em;
            font-weight: 500;
            display: inline-block;
        }
        .status-pending { background: #fff3cd; color: #856404; }
        .status-processing { background: #d1ecf1; color: #0c5460; }
        .status-shipped { background: #cce5ff; color: #004085; }
        .status-delivered { background: #c3e6cb; color: #155724; }
        .status-cancelled { background: #f8d7da; color: #721c24; }
        .status-return-approved { background: #d4edda; color: #155724; }
        .table th {
            background-color: #f8f9fa;
            border-bottom: 2px solid #e9ecef;
            color: #6c757d;
            font-weight: 500;
            padding: 1rem;
            text-align: left;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .table td {
            vertical-align: middle;
            color: #1a1a1a;
            padding: 1rem;
            border-bottom: 1px solid #e9ecef;
            font-size: 0.875rem;
        }
        .btn-view {
            background-color: #e7f1ff;
            border: none;
            color: #0d6efd;
            padding: 6px 12px;
            border-radius: 4px;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            font-size: 0.875rem;
        }
        .btn-view:hover {
            background-color: #d0e2ff;
            color: #0d6efd;
        }
        .table-responsive {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar.ejs') %>
    <div class="container py-4">
        <h2 class="mb-4">My Orders</h2>

        <% if (!orders || orders.length === 0) { %>
            <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>
                You haven't placed any orders yet.
                <a href="/products" class="alert-link ms-2">Start Shopping</a>
            </div>
        <% } else { %>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Status</th>
                            <th>Items</th>
                            <th>Total</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% orders.forEach(function(order) { 
                            const orderId = order.orderID || 'N/A';
                            const dateObj = order.orderDate ? new Date(order.orderDate) : null;
                            const day = dateObj ? String(dateObj.getDate()).padStart(2, '0') : '??';
                            const month = dateObj ? dateObj.toLocaleString('default', { month: 'short' }) : '???';
                            const year = dateObj ? dateObj.getFullYear() : '????';
                            const formattedDate = dateObj ? day + ' ' + month + ' ' + year : 'N/A';
                            const status = order.status || 'N/A';
                            let statusClass = 'status-badge';
                            let displayStatus = status;

                            if (order.returnRequest && order.returnRequest.status) {
                                if (order.returnRequest.status.toLowerCase() === 'approved') {
                                    displayStatus = 'Return Request Approved';
                                    statusClass += ' status-return-approved';
                                } else if (order.returnRequest.status.toLowerCase() === 'denied') {
                                    displayStatus = 'Return Request Denied';
                                    statusClass += ' status-cancelled';
                                }
                            } else if (status === 'Pending') statusClass += ' status-pending';
                            else if (status === 'Processing') statusClass += ' status-processing';
                            else if (status === 'Shipped') statusClass += ' status-shipped';
                            else if (status === 'Delivered') statusClass += ' status-delivered';
                            else if (status === 'Cancelled') statusClass += ' status-cancelled';
                            else if (status === 'Returned') statusClass += ' status-return-approved';
                        %>
                        <tr>
                            <td>#<%= orderId %></td>
                            <td><%= formattedDate %></td>
                            <td><span class="<%= statusClass %>"><%= displayStatus %></span></td>
                            <td><%= order.items && order.items.length ? order.items.length : 0 %> items</td>
                            <td>â‚¹<%= (order.totalAmount || 0).toFixed(2) %></td>
                            <td>
                                <a href="/profile/orders/<%= order._id %>" class="btn-view">
                                  <i class="bi bi-eye"></i> View
                                </a>
                              
                                <% if (['Pending', 'Confirmed', 'Processing'].includes(order.status)) { %>
                                    <button class="btn btn-danger btn-sm ms-2 cancel-order" data-order-id="<%= order._id %>">
                                      <i class="bi bi-x-circle"></i> Cancel
                                    </button>
                                <% } else if (order.status === 'Delivered') { %>
                                 <% if (!order.returnRequest || !order.returnRequest.status) { %>
                                    <button class="btn btn-danger btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#returnRequestModal" data-order-id="<%= order._id %>">
                                      <i class="bi bi-arrow-return-left"></i> Return
                                    </button>
                                  <% } else if (order.returnRequest.status.toLowerCase() === 'pending') { %>
                                    <span class="text-warning ms-2">Return Request Pending</span>
                                  <% } else if (order.returnRequest.status.toLowerCase() === 'approved') { %>
                                    <span class="text-success ms-2">Return Request Approved</span>
                                  <% } else if (order.returnRequest.status.toLowerCase() === 'denied') { %>
                                    <span class="text-danger ms-2">Return Request Denied</span>
                                  <% } %>
                                <% } %>
                              </td>
                              
                              
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        <% } %>
    </div>

    <!-- Return Request Modal -->
    <div class="modal fade" id="returnRequestModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Request Return</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="returnRequestForm">
                        <input type="hidden" id="orderId" name="orderId">
                        <div class="mb-3">
                            <label class="form-label">Reason for Return</label>
                            <textarea class="form-control" id="returnReason" rows="3" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="submitReturnRequest">Submit Request</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Handle return request modal
        const returnRequestModal = document.getElementById('returnRequestModal');
        if (returnRequestModal) {
            returnRequestModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const orderId = button.getAttribute('data-order-id');
                document.getElementById('orderId').value = orderId;
            });
        }

        // Handle order cancellation
        document.querySelectorAll('.cancel-order').forEach(button => {
            button.addEventListener('click', async () => {
                const orderId = button.getAttribute('data-order-id');
                
                if (!confirm('Are you sure you want to cancel this order?')) {
                    return;
                }

                try {
                    const response = await fetch(`/order/${orderId}/cancel`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const data = await response.json();
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message || 'Failed to cancel order');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Failed to cancel order');
                }
            });
        });

        // Handle return request submission
        document.getElementById('submitReturnRequest').addEventListener('click', async () => {
            const orderId = document.getElementById('orderId').value;
            const reason = document.getElementById('returnReason').value;

            if (!reason) {
                alert('Please provide a reason for return');
                return;
            }

            try {
                const response = await fetch(`/order/${orderId}/return`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ reason })
                });

                const data = await response.json();
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Failed to submit return request');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to submit return request');
            }
        });
    </script>
</body>
</html>
