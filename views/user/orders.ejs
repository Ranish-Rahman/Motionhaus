<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <!-- Add SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        body { 
            background: #f8f9fa;
            padding-top: 80px;
            font-family: 'Inter', sans-serif;
        }
        .status-badge {
            padding: 0.25em 0.75em;
            border-radius: 1em;
            font-size: 0.95em;
            font-weight: 500;
            display: inline-block;
        }
        .status-pending { background: #fff3cd; color: #856404; }
        .status-processing { background: #d1ecf1; color: #0c5460; }
        .status-shipped { background: #cce5ff; color: #004085; }
        .status-delivered { background: #c3e6cb; color: #155724; }
        .status-cancelled { background: #f8d7da; color: #721c24; }
        .status-return-approved { background: #d4edda; color: #155724; }
        .table th {
            background-color: #f8f9fa;
            border-bottom: 2px solid #e9ecef;
            color: #6c757d;
            font-weight: 500;
            padding: 1rem;
            text-align: left;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .table td {
            vertical-align: middle;
            color: #1a1a1a;
            padding: 1rem;
            border-bottom: 1px solid #e9ecef;
            font-size: 0.875rem;
        }
        .btn-view {
            background-color: #e7f1ff;
            border: none;
            color: #0d6efd;
            padding: 6px 12px;
            border-radius: 4px;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            font-size: 0.875rem;
        }
        .btn-view:hover {
            background-color: #d0e2ff;
            color: #0d6efd;
        }
        .table-responsive {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        /* Pagination Styles */
        .pagination-container {
            display: flex;
            justify-content: center;
            margin-top: 2rem;
            padding: 1rem;
        }
        .pagination {
            display: flex;
            gap: 0.5rem;
            list-style: none;
            padding: 0;
            margin: 0;
        }
        .page-item {
            display: inline-block;
        }
        .page-link {
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 40px;
            height: 40px;
            padding: 0.5rem;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            color: #0d6efd;
            text-decoration: none;
            transition: all 0.2s ease;
            background: white;
        }
        .page-link:hover {
            background: #e9ecef;
            border-color: #dee2e6;
            color: #0a58ca;
        }
        .page-item.active .page-link {
            background: #0d6efd;
            border-color: #0d6efd;
            color: white;
        }
        .page-item.disabled .page-link {
            color: #6c757d;
            pointer-events: none;
            background: #f8f9fa;
            border-color: #dee2e6;
        }
        .page-info {
            text-align: center;
            color: #6c757d;
            margin-top: 1rem;
            font-size: 0.875rem;
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar.ejs') %>
    <div class="container py-4">
        <h2 class="mb-4">My Orders</h2>

        <% if (!orders || orders.length === 0) { %>
            <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>
                You haven't placed any orders yet.
                <a href="/products" class="alert-link ms-2">Start Shopping</a>
            </div>
        <% } else { %>
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Items</th>
                            <th>Total</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% orders.forEach(order => { %>
                            <tr>
                                <td>#<%= order._id.toString().slice(-6) %></td>
                                <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <% order.items.forEach(item => { %>
                                            <div class="d-flex align-items-center mb-1">
                                                <img src="<%= item.product.images[0] %>" alt="<%= item.product.name %>" 
                                                     class="img-thumbnail me-2" style="width: 40px; height: 40px; object-fit: cover;">
                                                <div>
                                                    <div class="small"><%= item.product.name %></div>
                                                    <div class="small text-muted">
                                                        Status: 
                                                        <span class="badge bg-<%= item.status === 'Pending' ? 'warning' : 
                                                                            item.status === 'Shipped' ? 'info' : 
                                                                            item.status === 'Delivered' ? 'success' : 
                                                                            'danger' %>">
                                                            <%= item.status %>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                    </div>
                                </td>
                                <td>â‚¹<%= order.totalAmount.toFixed(2) %></td>
                            <td>
                                    <span class="badge bg-<%= order.status === 'Pending' ? 'warning' : 
                                                                    order.status === 'Shipped' ? 'info' : 
                                                                    order.status === 'Delivered' ? 'success' : 
                                                                    order.status === 'Cancelled' ? 'danger' : 
                                                                    order.status === 'Partially Cancelled' ? 'warning' : 
                                                                    'secondary' %>">
                                        <%= order.status %>
                                    </span>
                                </td>
                                <td>
                                    <a href="/profile/orders/<%= order._id %>" class="btn btn-sm btn-primary">
                                        <i class="fas fa-eye"></i> View
                                    </a>
                              </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <% if (orders && orders.length > 0) { %>
                <div class="pagination-container">
                    <nav aria-label="Page navigation">
                        <ul class="pagination">
                            <!-- Previous Page -->
                            <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>

                            <!-- Page Numbers -->
                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                </li>
                            <% } %>

                            <!-- Next Page -->
                            <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="page-info">
                    Showing <%= (currentPage - 1) * limit + 1 %> to <%= Math.min(currentPage * limit, totalOrders) %> of <%= totalOrders %> orders
                </div>
            <% } %>
        <% } %>
    </div>

    <!-- Return Request Modal -->
    <div class="modal fade" id="returnRequestModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Request Return</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="returnRequestForm">
                        <input type="hidden" id="orderId" name="orderId">
                        <div class="mb-3">
                            <label class="form-label">Reason for Return</label>
                            <textarea class="form-control" id="returnReason" rows="3" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="submitReturnRequest">Submit Request</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Add SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Handle return request modal
        const returnRequestModal = document.getElementById('returnRequestModal');
        if (returnRequestModal) {
            returnRequestModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const orderId = button.getAttribute('data-order-id');
                document.getElementById('orderId').value = orderId;
            });
        }

        // Handle order cancellation
        document.querySelectorAll('.cancel-order').forEach(button => {
            button.addEventListener('click', async () => {
                const orderId = button.getAttribute('data-order-id');
                
                // Show SweetAlert2 confirmation dialog
                const result = await Swal.fire({
                    title: 'Cancel Order',
                    text: 'Are you sure you want to cancel this order?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, cancel it!',
                    cancelButtonText: 'No, keep it',
                    reverseButtons: true
                });

                if (result.isConfirmed) {
                    try {
                        // Show loading state
                        Swal.fire({
                            title: 'Cancelling Order...',
                            html: 'Please wait...',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        const response = await fetch(`/order/${orderId}/cancel`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const data = await response.json();
                        if (data.success) {
                            await Swal.fire({
                                title: 'Cancelled!',
                                text: 'Your order has been cancelled.',
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false
                            });
                            location.reload();
                        } else {
                            throw new Error(data.message || 'Failed to cancel order');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: error.message || 'Failed to cancel order',
                            icon: 'error',
                            confirmButtonColor: '#dc3545'
                        });
                    }
                }
            });
        });

        // Handle return request submission
        document.getElementById('submitReturnRequest').addEventListener('click', async () => {
            const orderId = document.getElementById('orderId').value;
            const reason = document.getElementById('returnReason').value;

            if (!reason) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Please provide a reason for return',
                    icon: 'error',
                    confirmButtonColor: '#dc3545'
                });
                return;
            }

            try {
                // Show loading state
                Swal.fire({
                    title: 'Submitting Return Request...',
                    html: 'Please wait...',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                const response = await fetch(`/order/${orderId}/return`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ reason })
                });

                const data = await response.json();
                if (data.success) {
                    await Swal.fire({
                        title: 'Success!',
                        text: 'Return request submitted successfully',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    location.reload();
                } else {
                    throw new Error(data.message || 'Failed to submit return request');
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: error.message || 'Failed to submit return request',
                    icon: 'error',
                    confirmButtonColor: '#dc3545'
                });
            }
        });
    </script>
</body>
</html>
