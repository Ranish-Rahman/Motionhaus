<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/sidebar.css?v=2">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(207deg, rgb(25, 25, 25), rgb(0, 0, 0));
      color: white;
      min-height: 100vh;
    }

    .app-layout {
      display: flex;
      min-height: 100vh;
    }

    .main-content {
      flex-grow: 1;
      padding: 40px;
      margin-left: 250px;
      overflow-y: auto;
    }

    .header {
      margin-bottom: 30px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 20px;
    }

    .header-left {
      display: flex;
      align-items: center;
      gap: 20px;
      flex: 1;
    }

    .search-container {
      position: relative;
      flex: 1;
      max-width: 400px;
    }

    .search-input {
      width: 100%;
      padding: 8px 16px;
      padding-left: 40px;
      border-radius: 8px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      background: rgba(255, 255, 255, 0.05);
      color: white;
      font-size: 14px;
      transition: all 0.3s ease;
    }

    .search-input:focus {
      outline: none;
      border-color: #00a3ff;
      background: rgba(255, 255, 255, 0.1);
    }

    .search-icon {
      position: absolute;
      left: 12px;
      top: 50%;
      transform: translateY(-50%);
      color: #a0aec0;
      pointer-events: none;
    }

    .header h1 {
      font-size: 24px;
      margin-bottom: 5px;
      color: white;
    }

    .header p {
      font-size: 14px;
      color: #a0aec0;
    }

    .add-btn {
      background: #00a3ff;
      color: white;
      padding: 8px 16px;
      border-radius: 8px;
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 8px;
      transition: background 0.3s;
    }

    .add-btn:hover {
      background: #0088d4;
    }

    .card {
      background-color: #1e1f22;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
    }

    .table {
      width: 100%;
      border-collapse: collapse;
    }

    .table th {
      text-align: left;
      padding: 12px;
      color: #a0aec0;
      font-weight: 500;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .table td {
      padding: 12px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .table tr:last-child td {
      border-bottom: none;
    }

    .product-image {
      width: 50px;
      height: 50px;
      object-fit: cover;
      border-radius: 8px;
      background: #2b2d31;
    }

    .product-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .action-btn {
      background: none;
      border: none;
      color: #a0aec0;
      cursor: pointer;
      padding: 4px;
      transition: color 0.3s;
    }

    .action-btn:hover {
      color: white;
    }

    .action-btn.delete {
      color: #dc3545;
    }

    .action-btn.delete:hover {
      color: #ff4d4d;
    }

    .alert {
      padding: 12px;
      border-radius: 8px;
      margin-bottom: 20px;
    }

    .alert-error {
      background-color: rgba(220, 53, 69, 0.1);
      border: 1px solid rgba(220, 53, 69, 0.2);
      color: #dc3545;
    }

    .alert-success {
      background-color: rgba(25, 135, 84, 0.1);
      border: 1px solid rgba(25, 135, 84, 0.2);
      color: #198754;
    }

    .action-btn.edit {
      color: #00a3ff;
    }

    .action-btn.edit:hover {
      color: #0088d4;
    }

    .d-flex {
      display: flex;
      gap: 8px;
    }

    .gap-2 {
      gap: 8px;
    }

    .stock-badge {
      padding: 4px 8px;
      border-radius: 6px;
      font-size: 14px;
      font-weight: 500;
      display: inline-block;
    }

    .stock-in {
      color: #22c55e;
    }

    .stock-low {
      color: #f59e0b;
    }

    .stock-out {
      color: #ef4444;
    }

    .action-btn.block {
      color: #f59e0b;
    }

    .action-btn.block:hover {
      color: #fbbf24;
    }

    .action-btn.unblock {
      color: #22c55e;
    }

    .action-btn.unblock:hover {
      color: #16a34a;
    }

    .status-badge {
      padding: 4px 8px;
      border-radius: 6px;
      font-size: 12px;
      font-weight: 500;
    }

    .status-active {
      background-color: rgba(34, 197, 94, 0.1);
      color: #22c55e;
    }

    .status-blocked {
      background-color: rgba(245, 158, 11, 0.1);
      color: #f59e0b;
    }

    .blocked-product {
      opacity: 0.7;
      background-color: rgba(245, 158, 11, 0.05);
    }

    .blocked-product:hover {
      opacity: 1;
    }
  </style>
</head>
<body>
  <div class="app-layout">
    <%- include('../partials/sidebar') %>

    <main class="main-content">
      <div class="header">
        <div class="header-left">
          <div>
            <h1>Products</h1>
            <p>Manage your products</p>
          </div>
          <div class="search-container">
            <i class="fas fa-search search-icon"></i>
            <input type="text" class="search-input" placeholder="Search products..." id="searchInput">
          </div>
        </div>
        <a href="/admin/products/add" class="add-btn">
          <i class="bi bi-plus-lg"></i>
          Add Product
        </a>
      </div>

      <% if (error) { %>
        <div class="alert alert-error">
          <%= error %>
        </div>
      <% } %>

      <% if (success) { %>
        <div class="alert alert-success">
          <%= success %>
        </div>
      <% } %>

      <div class="card">
        <table class="table">
          <thead>
            <tr>
              <th>Image</th>
              <th>Name</th>
              <th>Price</th>
              <th>Stock</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (products && products.length > 0) { %>
              <% products.forEach(product => { %>
                <tr class="<%= product.isBlocked ? 'blocked-product' : '' %>">
                  <td>
                    <% if (product.images && product.images.length > 0) { %>
                      <div class="product-image">
                        <img src="<%= product.images[0] %>" 
                             alt="<%= product.name %>" 
                             onerror="this.onerror=null; this.parentElement.style.background='#2b2d31'; this.style.display='none';">
                      </div>
                    <% } else { %>
                      <div class="product-image" style="background: #2b2d31;"></div>
                    <% } %>
                  </td>
                  <td><%= product.name %></td>
                  <td>â‚¹<%= product.price.toFixed(2) %></td>
                  <td>
                    <span class="stock-badge <%= product.stock > 10 ? 'stock-in' : product.stock > 0 ? 'stock-low' : 'stock-out' %>">
                      <%= product.stock %>
                    </span>
                  </td>
                  <td>
                    <span class="status-badge <%= product.isBlocked ? 'status-blocked' : 'status-active' %>">
                      <%= product.isBlocked ? 'Blocked' : 'Active' %>
                    </span>
                  </td>
                  <td>
                    <div class="d-flex gap-2">
                      <a href="/admin/products/edit/<%= product._id %>" class="action-btn edit">
                        <i class="fas fa-edit"></i>
                      </a>
                      <% if (product.isBlocked) { %>
                        <button class="action-btn unblock block-product" data-id="<%= product._id %>" title="Unblock Product">
                          <i class="fas fa-unlock"></i>
                        </button>
                      <% } else { %>
                        <button class="action-btn block block-product" data-id="<%= product._id %>" title="Block Product">
                          <i class="fas fa-lock"></i>
                        </button>
                      <% } %>
                      <button class="action-btn delete delete-product" data-id="<%= product._id %>">
                        <i class="fas fa-trash"></i>
                      </button>
                    </div>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="6" style="text-align: center;">No products found</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </main>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const searchInput = document.getElementById('searchInput');
      const productRows = document.querySelectorAll('tbody tr');
      
      // Configure SweetAlert2 with custom buttons
      const swalWithBootstrapButtons = Swal.mixin({
        customClass: {
          confirmButton: "submit-btn",
          cancelButton: "back-btn"
        },
        buttonsStyling: false
      });
      
      searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        
        productRows.forEach(row => {
          const productName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
          const productPrice = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
          
          if (productName.includes(searchTerm) || productPrice.includes(searchTerm)) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        });
      });

      const deleteButtons = document.querySelectorAll('.delete-product');
      
      deleteButtons.forEach(button => {
        button.addEventListener('click', async function() {
          const productId = this.dataset.id;
          
          swalWithBootstrapButtons.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            reverseButtons: true
          }).then(async (result) => {
            if (result.isConfirmed) {
              try {
                const response = await fetch(`/admin/products/${productId}`, {
                  method: 'DELETE',
                  headers: {
                    'Content-Type': 'application/json'
                  }
                });
                
                const data = await response.json();
                
                if (data.success) {
                  swalWithBootstrapButtons.fire({
                    title: "Deleted!",
                    text: "Your product has been deleted.",
                    icon: "success"
                  }).then(() => {
                    this.closest('tr').remove();
                    setTimeout(() => {
                      window.location.reload();
                    }, 1000);
                  });
                } else {
                  throw new Error(data.message);
                }
              } catch (error) {
                swalWithBootstrapButtons.fire({
                  title: "Error!",
                  text: `Error: ${error.message}`,
                  icon: "error"
                });
              }
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              swalWithBootstrapButtons.fire({
                title: "Cancelled",
                text: "Your product is safe :)",
                icon: "error"
              });
            }
          });
        });
      });

      const editButtons = document.querySelectorAll('.action-btn.edit');
      editButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const productId = this.closest('tr').querySelector('.delete-product').dataset.id;
          window.location.href = `/admin/products/edit/${productId}`;
        });
      });

      // Block/Unblock product functionality
      const blockButtons = document.querySelectorAll('.block-product');
      
      blockButtons.forEach(button => {
        button.addEventListener('click', async function() {
          const productId = this.dataset.id;
          const isBlocked = this.classList.contains('unblock');
          const action = isBlocked ? 'unblock' : 'block';
          
          if (confirm(`Are you sure you want to ${action} this product?`)) {
            try {
              const response = await fetch(`/admin/products/${productId}/${action}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              });
              
              if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
              }
              
              const data = await response.json();
              
              if (data.success) {
                // Update the UI
                const row = this.closest('tr');
                const statusBadge = row.querySelector('.status-badge');
                const blockButton = row.querySelector('.block-product');
                
                if (action === 'block') {
                  statusBadge.className = 'status-badge status-blocked';
                  statusBadge.textContent = 'Blocked';
                  blockButton.className = 'action-btn unblock block-product';
                  blockButton.innerHTML = '<i class="fas fa-unlock"></i>';
                  blockButton.title = 'Unblock Product';
                } else {
                  statusBadge.className = 'status-badge status-active';
                  statusBadge.textContent = 'Active';
                  blockButton.className = 'action-btn block block-product';
                  blockButton.innerHTML = '<i class="fas fa-lock"></i>';
                  blockButton.title = 'Block Product';
                }
                
                // Show success message
                const alertDiv = document.createElement('div');
                alertDiv.className = 'alert alert-success';
                alertDiv.innerHTML = data.message;
                document.querySelector('.main-content').prepend(alertDiv);
                
                // Remove alert after 3 seconds
                setTimeout(() => {
                  alertDiv.remove();
                }, 3000);
              } else {
                throw new Error(data.message);
              }
            } catch (error) {
              console.error('Error:', error);
              const alertDiv = document.createElement('div');
              alertDiv.className = 'alert alert-error';
              alertDiv.innerHTML = `Error: ${error.message}`;
              document.querySelector('.main-content').prepend(alertDiv);
            }
          }
        });
      });
    });
  </script>
</body>
</html> 