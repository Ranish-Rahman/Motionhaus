<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Admin Dashboard</title>
  <link rel="stylesheet" href="/css/sidebar.css?v=2">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    /* Reset and Core Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html, body {
      height: 100%;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(207deg, rgb(25, 25, 25), rgb(0, 0, 0));
      color: white;
      min-height: 100vh;
    }

    /* Layout */
    .app-layout {
      display: flex;
      min-height: 100vh;
    }

    .main-content {
      flex-grow: 1;
      padding: 40px;
      overflow-y: auto;
    }

    h1 {
      font-size: 24px;
      margin-bottom: 30px;
      font-weight: 600;
    }

    /* Grid System Replacement */
    .grid-row {
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .grid-col-3, .grid-col-4, .grid-col-6, .grid-col-8 {
      flex-grow: 1;
      display: flex; /* Allow children to fill height */
    }

    @media (min-width: 768px) {
      .grid-col-3 { flex: 0 0 calc(25% - 1.125rem); }
      .grid-col-4 { flex: 0 0 calc(33.33% - 1rem); }
      .grid-col-6 { flex: 0 0 calc(50% - 0.75rem); }
      .grid-col-8 { flex: 0 0 calc(66.66% - 0.5rem); }
    }

    /* Card Styles Replacement */
    .dashboard-card {
      background-color: #1e1f22;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
      width: 100%; /* Make card fill column */
    }
    
    .dashboard-card.text-center {
      text-align: center;
    }

    .dashboard-card h5 {
      font-size: 1.1rem;
      margin-bottom: 1rem;
      font-weight: 600;
    }

    /* Stat Card Specific Styles */
    .stat-card-title {
      color: #a0aec0;
      font-size: 14px;
      margin-bottom: 10px;
    }
    .stat-card-value {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 10px;
    }
    .stat-card-trend {
      display: flex;
      align-items: center;
      font-size: 12px;
    }
    .trend-up { color: #22c55e; }
    .trend-down { color: #ef4444; }

    /* Top Lists Replacement */
    .top-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .top-list-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 12px 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    .top-list-item:last-child {
      border-bottom: none;
    }

    /* Badge Replacement */
    .badge {
      display: inline-block;
      padding: .35em .65em;
      font-size: .75em;
      font-weight: 700;
      line-height: 1;
      color: #fff;
      text-align: center;
      white-space: nowrap;
      vertical-align: baseline;
      border-radius: .5rem;
    }
    .badge-primary { background-color: #0d6efd; }
    .badge-success { background-color: #198754; }
    .badge-info { background-color: #0dcaf0; }
    
    /* Date Filter Styles */
    .date-filters {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .date-select, .date-input {
      background-color: #2a2b2f;
      color: white;
      border: 1px solid #444;
      border-radius: 6px;
      padding: 0.375rem 0.75rem;
      font-size: 0.9rem;
    }
    .date-select {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23a0aec0' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 0.75rem center;
      background-size: 16px 12px;
    }
    .date-separator {
      color: #a0aec0;
    }
    .date-filter-btn {
      background-color: #4f46e5;
      color: white;
      border: none;
      border-radius: 6px;
      padding: 0.375rem 1rem;
      font-size: 0.9rem;
      cursor: pointer;
      transition: background-color 0.2s;
    }
    .date-filter-btn:hover {
      background-color: #4338ca;
    }
    
    /* Chart and Form Section */
    .card-header-flex {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }
    .card-title {
        font-weight: bold;
    }
  </style>
</head>
<body>
  <div class="app-layout">
    <%- include('../partials/sidebar') %>
    <main class="main-content">
      <h1>Admin Dashboard</h1>
      
      <!-- Stats Row -->
      <div class="grid-row">
        <div class="grid-col-3">
          <div class="dashboard-card">
            <div class="stat-card-title">Total Revenue</div>
            <div class="stat-card-value" style="color: #22c55e;">₹<%= stats.totalRevenue.toLocaleString() %></div>
            <div class="stat-card-trend trend-up">↑ <%= stats.revenueChange %>%</div>
          </div>
        </div>
        <div class="grid-col-3">
          <div class="dashboard-card">
            <div class="stat-card-title">Total Orders</div>
            <div class="stat-card-value"><%= stats.totalOrders %></div>
            <div class="stat-card-trend trend-up">↑ <%= stats.ordersChange %>%</div>
          </div>
        </div>
        <div class="grid-col-3">
          <div class="dashboard-card">
            <div class="stat-card-title">Total Customers</div>
            <div class="stat-card-value"><%= stats.totalCustomers %></div>
            <div class="stat-card-trend <%= stats.customersChange < 0 ? 'trend-down' : 'trend-up' %>">
              <%= stats.customersChange < 0 ? '↓' : '↑' %> <%= Math.abs(stats.customersChange) %>%
            </div>
          </div>
        </div>
        <div class="grid-col-3">
          <div class="dashboard-card">
            <div class="stat-card-title">Pending Delivery</div>
            <div class="stat-card-value"><%= stats.pendingDelivery %></div>
            <div class="stat-card-trend trend-up">↑ <%= stats.pendingChange %>%</div>
          </div>
        </div>
      </div>

      <!-- Charts Row -->
      <div class="grid-row">
        <div class="grid-col-8">
          <div class="dashboard-card">
            <div class="card-header-flex">
              <span class="card-title">Sales Analytics</span>
              <div class="date-filters">
                <select class="date-select" id="sales-period-select" onchange="changeSalesPeriod()">
                  <option value="weekly" <%- period === 'weekly' ? 'selected' : '' %>>Weekly</option>
                  <option value="monthly" <%- period === 'monthly' ? 'selected' : '' %>>Monthly</option>
                  <option value="yearly" <%- period === 'yearly' ? 'selected' : '' %>>Yearly</option>
                  <% if (period === 'custom') { %>
                    <option value="custom" selected>Custom</option>
                  <% } %>
                </select>
                <input type="date" class="date-input" id="start-date" value="<%- startDate %>">
                <span class="date-separator">to</span>
                <input type="date" class="date-input" id="end-date" value="<%- endDate %>">
                <button class="date-filter-btn" onclick="filterByDateRange()">Go</button>
              </div>
            </div>
            <canvas id="salesChart" height="200"></canvas>
          </div>
        </div>
        <div class="grid-col-4">
          <div class="dashboard-card text-center">
            <span class="card-title">Sales Target</span>
            <canvas id="targetChart" height="200"></canvas>
            <div style="margin-top: 1rem;">
              <div style="font-size: 1.2rem; font-weight: bold; color: #22c55e;">
                <%= stats.targetPercentage %>%
              </div>
              <div style="font-size: 0.9rem; color: #a0aec0; margin-bottom: 0.5rem;">
                of ₹<%= stats.monthlyTarget.toLocaleString() %> target
              </div>
              <div style="font-size: 1rem; font-weight: bold;">
                ₹<%= stats.totalRevenue.toLocaleString() %>
              </div>
              <div style="color: #a0aec0; font-size: 0.8rem;">
                <%= stats.remainingDays %> days left in month
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Top Lists Row -->
      <div class="grid-row">
        <div class="grid-col-4">
          <div class="dashboard-card">
            <h5>Top 10 Products</h5>
            <ul class="top-list">
              <% topProducts.forEach(p => { %>
                <li class="top-list-item">
                  <img src="<%= p.image %>" alt="<%= p.name %>" style="width:40px;height:40px;object-fit:cover;border-radius:6px;margin-right:10px;">
                  <span style="flex-grow: 1;"><%= p.name %></span>
                  <span class="badge badge-primary">x<%= p.count %></span>
                </li>
              <% }) %>
            </ul>
          </div>
        </div>
        <div class="grid-col-4">
          <div class="dashboard-card">
            <h5>Top 10 Categories</h5>
            <ul class="top-list">
              <% topCategories.forEach(c => { %>
                <li class="top-list-item">
                  <span><%= c.name %></span>
                  <span class="badge badge-success">x<%= c.count %></span>
                </li>
              <% }) %>
            </ul>
          </div>
        </div>
        <div class="grid-col-4">
          <div class="dashboard-card">
            <h5>Top 10 Brands</h5>
            <ul class="top-list">
              <% topBrands.forEach(b => { %>
                <li class="top-list-item">
                  <span><%= b.name %></span>
                  <span class="badge badge-info">x<%= b.count %></span>
                </li>
              <% }) %>
            </ul>
          </div>
        </div>
      </div>
    </main>
  </div>
  
  <!-- Embed Chart Data as JSON -->
  <script id="sales-labels" type="application/json">
    <%- JSON.stringify(salesAnalytics.labels) %>
  </script>
  <script id="sales-data" type="application/json">
    <%- JSON.stringify(salesAnalytics.data) %>
  </script>
  <script id="target-data" type="application/json">
    <%- JSON.stringify([targetProgress.achieved, targetProgress.remaining]) %>
  </script>
  <script id="target-percentage" type="application/json">
    <%- JSON.stringify(stats.targetPercentage) %>
  </script>

  <script>
    function changeSalesPeriod() {
      const selectedPeriod = document.getElementById('sales-period-select').value;
      if (selectedPeriod !== 'custom') {
        window.location.href = `/admin/dashboard?period=${selectedPeriod}`;
      }
    }

    function filterByDateRange() {
      const startDate = document.getElementById('start-date').value;
      const endDate = document.getElementById('end-date').value;
      if (startDate && endDate) {
        window.location.href = `/admin/dashboard?startDate=${startDate}&endDate=${endDate}`;
      } else {
        alert('Please select both a start and end date.');
      }
    }

    // Read EJS data from JSON script tags
    const salesLabels = JSON.parse(document.getElementById('sales-labels').textContent);
    const salesData = JSON.parse(document.getElementById('sales-data').textContent);
    const targetData = JSON.parse(document.getElementById('target-data').textContent);
    const targetPercentage = JSON.parse(document.getElementById('target-percentage').textContent);

    // Sales Analytics Bar Chart
    const salesChart = new Chart(document.getElementById('salesChart').getContext('2d'), {
      type: 'bar',
      data: {
        labels: salesLabels,
        datasets: [{
          label: 'Income',
          data: salesData,
          backgroundColor: 'rgba(34,197,94,0.3)'
        }]
      },
      options: {
        scales: {
          y: { beginAtZero: true }
        }
      }
    });

    // Sales Target Donut Chart
    const targetChart = new Chart(document.getElementById('targetChart').getContext('2d'), {
      type: 'doughnut',
      data: {
        labels: ['Achieved', 'Remaining'],
        datasets: [{
          data: targetData,
          backgroundColor: ['#22c55e', '#e5e7eb']
        }]
      },
      options: {
        cutout: '70%',
        plugins: { 
          legend: { display: false },
          tooltip: {
            callbacks: {
              label: function(context) {
                const label = context.label || '';
                const value = context.parsed;
                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                const percentage = Math.round((value / total) * 100);
                return `${label}: ₹${value.toLocaleString()} (${percentage}%)`;
              }
            }
          }
        }
      }
    });
  </script>
</body>
</html>
