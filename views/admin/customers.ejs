<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Admin Dashboard</title>
  <link rel="stylesheet" href="/css/sidebar.css?v=2">
  <link rel="stylesheet" href="/css/tables.css?v=2">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(207deg, rgb(25, 25, 25), rgb(0, 0, 0));
      color: white;
      min-height: 100vh;
    }

    .app-layout {
      display: flex;
      min-height: 100vh;
      background: linear-gradient(207deg, rgb(25, 25, 25), rgb(0, 0, 0));
    }

    .main-content {
      flex-grow: 1;
      padding: 40px;
      overflow-y: auto;
      background: linear-gradient(207deg, rgb(25, 25, 25), rgb(0, 0, 0));
    }

    .header h1 {
      font-size: 24px;
      margin-bottom: 5px;
      color: white;
    }

    .header p {
      font-size: 14px;
      color: #a0aec0;
    }

    .card {
      background-color: #1e1f22 !important;
      border-radius: 16px;
      padding: 24px;
      margin-top: 30px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
    }

    .card h3 {
      color: white;
      margin-bottom: 20px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    table th,
    table td {
      padding: 14px;
      text-align: left;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      color: white;
    }

    .user-info {
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .user-info img {
      width: 36px;
      height: 36px;
      border-radius: 50%;
    }

    .user-info strong {
      color: white;
    }

    .user-info span {
      color: #a0aec0;
    }

    .badge {
      padding: 4px 10px;
      border-radius: 8px;
      font-size: 12px;
      display: inline-block;
    }

    .badge-online {
      background-color: #22c55e;
      color: white;
    }

    .badge-offline {
      background-color: #ef4444;
      color: white;
    }

    .badge-blocked {
      background-color: #f59e0b;
      color: white;
    }

    .action-buttons {
      display: flex;
      gap: 8px;
    }

    .action-buttons button {
      width: 32px;
      height: 32px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.3s ease;
      background: rgba(255, 255, 255, 0.1);
      color: white;
    }

    .action-buttons button:hover {
      background: rgba(255, 255, 255, 0.2);
    }

    .action-buttons .btn-view {
      color: #3b82f6;
    }

    .action-buttons .btn-edit {
      color: #22c55e;
    }

    .action-buttons .btn-delete {
      color: #ef4444;
    }

    .action-buttons .btn-block {
      color: #f59e0b;
    }

    .action-buttons .btn-unblock {
      color: #22c55e;
    }

    .action-buttons button i {
      font-size: 14px;
    }

    .search-container {
      margin-bottom: 20px;
    }
    .search-form .input-group {
      max-width: 500px;
    }
    .total-users {
      color: #a0aec0;
      font-size: 0.875rem;
    }
    .pagination {
      margin-top: 2rem;
      display: flex;
      justify-content: center;
      gap: 0.5rem;
    }

    .page-item {
      list-style: none;
    }

    .page-link {
      display: flex;
      align-items: center;
      justify-content: center;
      min-width: 2.5rem;
      height: 2.5rem;
      padding: 0.5rem;
      border-radius: 8px;
      background-color: #1e1f22;
      color: #a0aec0;
      text-decoration: none;
      transition: all 0.3s ease;
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .page-link:hover {
      background-color: rgba(255, 255, 255, 0.1);
      color: white;
      border-color: rgba(255, 255, 255, 0.2);
    }

    .page-item.active .page-link {
      background-color: #3b82f6;
      color: white;
      border-color: #3b82f6;
    }

    .page-item.disabled .page-link {
      background-color: #1e1f22;
      color: #4a5568;
      cursor: not-allowed;
      border-color: rgba(255, 255, 255, 0.05);
    }

    .page-link i {
      font-size: 1rem;
    }
    /* Vision UI styled search bar */
.search-bar {
  display: flex;
  align-items: center;

  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 40px;
  padding: 8px 16px;
  color: white;
  position: relative;
  margin-top: 11px;
}

.search-icon {
  color: rgba(255, 255, 255, 0.4);
  font-size: 16px;
  margin-right: 10px;
}

.search-input {
  background: transparent;
  border: none;
  outline: none;
  color: white;
  font-size: 14px;
  flex: 1;
}

.search-input::placeholder {
  color: rgba(255, 255, 255, 0.4);
}

.clear-btn {
  color: rgba(255, 255, 255, 0.4);
  text-decoration: none;
  font-size: 14px;
  margin-left: 10px;
  transition: color 0.2s;
}

.clear-btn:hover {
  color: white;
}

  </style>
</head>
<body>
  <div class="app-layout">
    <%- include('../partials/sidebar') %>

    <main class="main-content">
      <div class="header">
        <h1>User Management</h1>
        <p>Manage your users and their permissions</p>
      </div>

      <!-- Search Bar -->
      <div class="search-container">
        <form action="/admin/customers" method="GET" class="search-form" id="searchForm">
          <div class="search-bar">
            <i class="bi bi-search search-icon"></i>
            <input
              type="text"
              name="search"
              class="search-input"
              placeholder="Search by name or email..."
              value="<%= search %>"
              id="searchInput">
            <% if (search) { %>
              <a href="/admin/customers" class="clear-btn" id="clearSearch">
                <i class="bi bi-x-lg"></i>
              </a>
            <% } %>
          </div>
        </form>
      </div>
      

      <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h3>Users Table</h3>
          <div class="total-users">
            Total Users: <%= totalUsers %>
          </div>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table">
              <thead>
                <tr>
                  <th>User</th>
                  <th>Email</th>
                  <th>Role</th>
                  <th>Status</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (users && users.length > 0) { %>
                  <% users.forEach(user => { %>
                    <tr data-user-id="<%= user._id %>">
                      <td>
                        <div class="user-info">
                          <img src="https://ui-avatars.com/api/?name=<%= user.name %>&background=random" alt="<%= user.name %>" />
                          <div>
                            <strong><%= user.name %></strong>
                          </div>
                        </div>
                      </td>
                      <td><%= user.email %></td>
                      <td><%= user.role %></td>
                      <td>
                        <span class="badge badge-<%= user.status === 'active' ? 'online' : user.status === 'blocked' ? 'blocked' : 'offline' %>">
                          <%= user.status %>
                        </span>
                      </td>
                      <td>
                        <div class="action-buttons">
                          <button class="btn-view" onclick="viewUser('<%= user._id %>')" title="View User">
                            <i class="bi bi-eye"></i>
                          </button>
                          <button class="btn-edit" onclick="editUser('<%= user._id %>')" title="Edit User">
                            <i class="bi bi-pencil"></i>
                          </button>
                          <button class="btn-delete" onclick="deleteUser('<%= user._id %>')" title="Delete User">
                            <i class="bi bi-trash"></i>
                          </button>
                          <% if (user.status === 'active') { %>
                            <button class="btn-block" onclick="blockUser('<%= user._id %>')" title="Block User">
                              <i class="bi bi-lock"></i>
                            </button>
                          <% } else { %>
                            <button class="btn-unblock" onclick="unblockUser('<%= user._id %>')" title="Unblock User">
                              <i class="bi bi-unlock"></i>
                            </button>
                          <% } %>
                        </div>
                      </td>
                    </tr>
                  <% }); %>
                <% } else { %>
                  <tr>
                    <td colspan="5" class="text-center">No users found</td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>

          <!-- Pagination -->
          <% if (pagination.totalPages > 1) { %>
            <nav aria-label="Page navigation" class="mt-4">
              <ul class="pagination">
                <!-- First Page -->
                <% if (pagination.currentPage > 1) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=1<%= search ? '&search=' + search : '' %>" title="First Page">
                      <i class="bi bi-chevron-double-left"></i>
                    </a>
                  </li>
                <% } %>

                <!-- Previous Page -->
                <% if (pagination.hasPrevPage) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= pagination.prevPage %><%= search ? '&search=' + search : '' %>" title="Previous Page">
                      <i class="bi bi-chevron-left"></i>
                    </a>
                  </li>
                <% } %>
                
                <!-- Page Numbers -->
                <% 
                  let startPage = Math.max(1, pagination.currentPage - 2);
                  let endPage = Math.min(pagination.totalPages, startPage + 4);
                  if (endPage - startPage < 4) {
                    startPage = Math.max(1, endPage - 4);
                  }
                %>
                
                <% if (startPage > 1) { %>
                  <li class="page-item disabled">
                    <span class="page-link">...</span>
                  </li>
                <% } %>

                <% for(let i = startPage; i <= endPage; i++) { %>
                  <li class="page-item <%= i === pagination.currentPage ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %><%= search ? '&search=' + search : '' %>">
                      <%= i %>
                    </a>
                  </li>
                <% } %>

                <% if (endPage < pagination.totalPages) { %>
                  <li class="page-item disabled">
                    <span class="page-link">...</span>
                  </li>
                <% } %>
                
                <!-- Next Page -->
                <% if (pagination.hasNextPage) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= pagination.nextPage %><%= search ? '&search=' + search : '' %>" title="Next Page">
                      <i class="bi bi-chevron-right"></i>
                    </a>
                  </li>
                <% } %>

                <!-- Last Page -->
                <% if (pagination.currentPage < pagination.totalPages) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= pagination.totalPages %><%= search ? '&search=' + search : '' %>" title="Last Page">
                      <i class="bi bi-chevron-double-right"></i>
                    </a>
                  </li>
                <% } %>
              </ul>
            </nav>
          <% } %>
        </div>
      </div>
    </main>
  </div>

  <!-- Add SweetAlert2 JS -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    // Global functions for user management
    function viewUser(userId) {
      window.location.href = `/admin/users/view/${userId}`;
    }

    function editUser(userId) {
      window.location.href = `/admin/users/edit/${userId}`;
    }

    function deleteUser(userId) {
      if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
        fetch(`/admin/users/${userId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            location.reload();
          } else {
            alert(data.message || 'Failed to delete user');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to delete user');
        });
      }
    }

    function blockUser(userId) {
      Swal.fire({
        title: 'Block User',
        text: 'Are you sure you want to block this user?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, block user',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/users/${userId}/block`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            credentials: 'include'
          })
          .then(response => {
            if (response.status === 401) {
              window.location.href = '/admin/login';
              return;
            }
            if (!response.ok) {
              return response.json().then(data => {
                throw new Error(data.message || 'Failed to block user');
              });
            }
            return response.json();
          })
          .then(data => {
            if (data.success) {
              // Find the row using the user ID
              const row = document.querySelector(`tr[data-user-id="${userId}"]`);
              if (row) {
                // Update status badge
                const statusBadge = row.querySelector('.badge');
                statusBadge.className = 'badge badge-blocked';
                statusBadge.textContent = 'blocked';
                
                // Update button
                const actionButtons = row.querySelector('.action-buttons');
                const blockButton = actionButtons.querySelector('.btn-block');
                if (blockButton) {
                  blockButton.className = 'btn-unblock';
                  blockButton.innerHTML = '<i class="bi bi-unlock"></i>';
                  blockButton.onclick = () => unblockUser(userId);
                  blockButton.title = 'Unblock User';
                }
              }
              Swal.fire({
                title: 'Success!',
                text: data.message,
                icon: 'success',
                timer: 1500,
                showConfirmButton: false
              });
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire({
              title: 'Error!',
              text: error.message,
              icon: 'error'
            });
          });
        }
      });
    }

    function unblockUser(userId) {
      Swal.fire({
        title: 'Unblock User',
        text: 'Are you sure you want to unblock this user?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, unblock user',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/users/${userId}/unblock`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            credentials: 'include'
          })
          .then(response => {
            if (response.status === 401) {
              window.location.href = '/admin/login';
              return;
            }
            if (!response.ok) {
              return response.json().then(data => {
                throw new Error(data.message || 'Failed to unblock user');
              });
            }
            return response.json();
          })
          .then(data => {
            if (data.success) {
              // Find the row using the user ID
              const row = document.querySelector(`tr[data-user-id="${userId}"]`);
              if (row) {
                // Update status badge
                const statusBadge = row.querySelector('.badge');
                statusBadge.className = 'badge badge-online';
                statusBadge.textContent = 'active';
                
                // Update button
                const actionButtons = row.querySelector('.action-buttons');
                const unblockButton = actionButtons.querySelector('.btn-unblock');
                if (unblockButton) {
                  unblockButton.className = 'btn-block';
                  unblockButton.innerHTML = '<i class="bi bi-lock"></i>';
                  unblockButton.onclick = () => blockUser(userId);
                  unblockButton.title = 'Block User';
                }
              }
              Swal.fire({
                title: 'Success!',
                text: data.message,
                icon: 'success',
                timer: 1500,
                showConfirmButton: false
              }).then(() => {
                // Reload the page to ensure all data is in sync
                location.reload();
              });
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire({
              title: 'Error!',
              text: error.message,
              icon: 'error'
            });
          });
        }
      });
    }

    // DOM Content Loaded event listener for search functionality
    document.addEventListener('DOMContentLoaded', function() {
      const searchForm = document.getElementById('searchForm');
      const searchInput = document.getElementById('searchInput');
      const clearSearch = document.getElementById('clearSearch');
      const tableBody = document.querySelector('tbody');
      const rows = tableBody.querySelectorAll('tr');

      // Handle form submission
      searchForm.addEventListener('submit', function(e) {
        e.preventDefault();
        const searchTerm = searchInput.value.trim();
        if (searchTerm) {
          window.location.href = `/admin/customers?search=${encodeURIComponent(searchTerm)}`;
        } else {
          window.location.href = '/admin/customers';
        }
      });

      // Handle clear button
      if (clearSearch) {
        clearSearch.addEventListener('click', function(e) {
          e.preventDefault();
          window.location.href = '/admin/customers';
        });
      }

      // Real-time search functionality
      searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase().trim();
        
        rows.forEach(row => {
          const name = row.querySelector('td:first-child strong').textContent.toLowerCase();
          const email = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
          
          if (name.includes(searchTerm) || email.includes(searchTerm)) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        });
      });
    });
  </script>
</body>
</html>



